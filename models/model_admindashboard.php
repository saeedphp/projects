<?php

class model_admindashboard extends Model{

    public function __construct()
    {
        parent::__construct();
    }

    function getPrgress(){

        $sql='SELECT * FROM tbl_progress';
        $res=$this->doSelect($sql);
        return $res;

    }

    function getStat()
    {

        $today = date('Y/m/d');
        $time = time();
        $lastweek_time = $time - (14 * 24 * 3600);
        $lastweek_date = date('Y/m/d', $lastweek_time);
        $dates = $this->getRange($lastweek_date, $today);
        $progress = $this->getPrgress();
        $progress_stat=[];



        foreach ($dates as $date){
            $jalali_date=self::gregorianToJalali($date);
            $progress_stat[$jalali_date]=0;
        }

        foreach ($progress as $row){
            $date_jalali=$row['date'];
            $date_gregorian=self::jalaliToGregorian($date_jalali);
            if (in_array($date_gregorian,$dates)){

                @$progress_stat[$date_jalali]=$progress_stat[$date_jalali]+1;

            }
        }


        return [$progress_stat];

    }

    function getWeekStat()
    {

        $today = date('Y/m/d');
        $time = time();
        $lastweek_time = $time - (7 * 24 * 3600);
        $lastweek_date = date('Y/m/d', $lastweek_time);
        $dates = $this->getRange($lastweek_date, $today);
        $progress = $this->getPrgress();
        $progress_stat=[];

        foreach ($dates as $date){
            $jalali_date=self::gregorianToJalali($date);
            $progress_stat[$jalali_date]=0;
        }

        foreach ($progress as $row){
            $date_jalali=$row['date'];
            $date_gregorian=self::jalaliToGregorian($date_jalali);
            if (in_array($date_gregorian,$dates)){

                @$progress_stat[$date_jalali]=$progress_stat[$date_jalali]+1;

            }
        }

        return [$progress_stat];

    }

    function getRange($startDate,$endDate){

        $dates=[];
        $current=strtotime($startDate);
        $last=strtotime($endDate);

        while($current <= $last){
            $dates[]=date('Y/m/d',$current);
            $current=strtotime('+1 day',$current);
        }

        return $dates;

    }

    function getProgress(){

        /*
         * p  == tbl_progress
         * pt == tbl_project
         * ps == tbl_status
         * */

        $sql='SELECT p.*,pT.title AS projectType,ps.title AS statusTitle
              FROM tbl_progress p
              LEFT JOIN tbl_project pt ON p.type=pt.id
              LEFT JOIN tbl_status ps ON p.status=ps.id
              WHERE p.archive=? ORDER BY id DESC ';
        $res=$this->doSelect($sql,[0]);
        return $res;

    }

    function getProgressSummary(){

        /*
         * p  == tbl_progress
         * pt == tbl_project
         * ps == tbl_status
         * */

        $sql='SELECT p.*,pT.title AS projectType,ps.title AS statusTitle
              FROM tbl_progress p
              LEFT JOIN tbl_project pt ON p.type=pt.id
              LEFT JOIN tbl_status ps ON p.status=ps.id
              WHERE p.archive=? ORDER BY id DESC LIMIT 3';
        $res=$this->doSelect($sql,[0]);
        return $res;

    }

    function getProjectType(){

        $sql='SELECT title FROM tbl_project WHERE archive=?';
        $res=$this->doSelect($sql,[0]);
        return $res;

    }

    public static function logOut()
    {
        parent::logOut(); // TODO: Change the autogenerated stub
    }

    function getFinancial(){

        /*
         * f = tbl_financial   cost of projects
         * pP = tbl_progress   title of project
         * pT = tbl_project    type of projects
         * s = tbl_finanical_status    status of projectsFinancial
         * */

        $sql='SELECT f.*,pP.title AS projectTitle,pT.title AS projectType,s.title AS projectStatus
              FROM tbl_financial f
              LEFT JOIN tbl_progress pP ON f.project=pP.id
              LEFT JOIN tbl_project pT ON f.type=pT.id
              LEFT JOIN tbl_financial_status s ON f.status=s.id
              WHERE f.archive=?';
        $res=$this->doSelect($sql,[0]);
        return $res;

    }

    public static function visit()
    {
        parent::visit(); // TODO: Change the autogenerated stub
    }

}

?>